apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    meta.helm.sh/release-name: cceaddon-nginx-ingress
    meta.helm.sh/release-namespace: demo-app
  creationTimestamp: "2025-08-01T10:36:36Z"
  generation: 2
  labels:
    app: nginx-ingress
    app.kubernetes.io/managed-by: Helm
    chart: nginx-ingress-3.0.34
    component: controller
    heritage: Helm
    release: cceaddon-nginx-ingress
  name: cceaddon-nginx-ingress-controller
  namespace: demo-app
  resourceVersion: "28970"
  uid: 6af47e8b-6af7-4abe-86b2-2581d081e4de
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx-ingress
      component: controller
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx-ingress
        component: controller
        metrics: cceaddon-nginx-ingress
        release: cceaddon-nginx-ingress
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nginx-ingress
                - key: component
                  operator: In
                  values:
                  - controller
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - nginx-ingress
              - key: component
                operator: In
                values:
                - controller
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - /nginx-ingress-controller
        - --default-backend-service=demo-app/cceaddon-nginx-ingress-default-backend
        - --publish-service=demo-app/cceaddon-nginx-ingress-controller
        - --election-id=ingress-controller-leader
        - --ingress-class=nginx
        - --controller-class=k8s.io/ingress-nginx
        - --configmap=demo-app/cceaddon-nginx-ingress-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --exclude-socket-metrics=nginx_ingress_controller_success,nginx_ingress_controller_header_duration_seconds,nginx_ingress_controller_ingress_upstream_latency_seconds
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: swr.tr-west-1.myhuaweicloud.com/hwofficial/nginx-ingress:v1.11.5
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 10; /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 100
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: nginx-ingress-controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 10254
          name: metrics
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "4"
            memory: 2000Mi
          requests:
            cpu: "4"
            memory: 2000Mi
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - |
          if [ "$POD_IP" != "$HOST_IP" ]; then
            mount -o remount rw /proc/sys
            if [ $? -eq 0 ]; then
              sysctl -w net.core.somaxconn=65535
              sysctl -w net.ipv4.ip_local_port_range="1024 65535"
              sysctl -w net.ipv4.tcp_fin_timeout=15
              sysctl -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=30
            else
              echo "Failed to remount /proc/sys as read-write. Skipping sysctl commands."
            fi
          fi
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: swr.tr-west-1.myhuaweicloud.com/hwofficial/nginx-ingress:v1.11.5
        imagePullPolicy: IfNotPresent
        name: setsysctl
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            drop:
            - ALL
          runAsGroup: 0
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 82
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: cceaddon-nginx-ingress
      serviceAccountName: cceaddon-nginx-ingress
      terminationGracePeriodSeconds: 300
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 60
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60
      volumes:
      - hostPath:
          path: /etc/localtime
          type: File
        name: localtime
      - name: webhook-cert
        secret:
          defaultMode: 416
          secretName: cceaddon-nginx-ingress-admission
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-08-01T10:38:53Z"
    lastUpdateTime: "2025-08-01T10:38:53Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-08-01T10:36:36Z"
    lastUpdateTime: "2025-08-01T10:39:13Z"
    message: ReplicaSet "cceaddon-nginx-ingress-controller-5b46fc5c56" has successfully
      progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
