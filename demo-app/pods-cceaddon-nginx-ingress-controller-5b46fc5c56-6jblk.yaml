apiVersion: v1
kind: Pod
metadata:
  annotations:
    localdns.cce.io/servers: '["169.254.20.10"]'
    node-local-dns-webhook.k8s.io/status: injected
  creationTimestamp: "2025-08-01T10:38:53Z"
  generateName: cceaddon-nginx-ingress-controller-5b46fc5c56-
  labels:
    app: nginx-ingress
    component: controller
    metrics: cceaddon-nginx-ingress
    pod-template-hash: 5b46fc5c56
    release: cceaddon-nginx-ingress
  name: cceaddon-nginx-ingress-controller-5b46fc5c56-6jblk
  namespace: demo-app
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: cceaddon-nginx-ingress-controller-5b46fc5c56
    uid: a85354b5-34da-4598-b309-fac4c3b2f083
  resourceVersion: "28961"
  uid: 9884837f-c60a-4f88-9f71-b91cc2741a31
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - nginx-ingress
            - key: component
              operator: In
              values:
              - controller
          topologyKey: topology.kubernetes.io/zone
        weight: 100
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - nginx-ingress
          - key: component
            operator: In
            values:
            - controller
        topologyKey: kubernetes.io/hostname
  containers:
  - args:
    - /nginx-ingress-controller
    - --default-backend-service=demo-app/cceaddon-nginx-ingress-default-backend
    - --publish-service=demo-app/cceaddon-nginx-ingress-controller
    - --election-id=ingress-controller-leader
    - --ingress-class=nginx
    - --controller-class=k8s.io/ingress-nginx
    - --configmap=demo-app/cceaddon-nginx-ingress-controller
    - --validating-webhook=:8443
    - --validating-webhook-certificate=/usr/local/certificates/cert
    - --validating-webhook-key=/usr/local/certificates/key
    - --exclude-socket-metrics=nginx_ingress_controller_success,nginx_ingress_controller_header_duration_seconds,nginx_ingress_controller_ingress_upstream_latency_seconds
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: swr.tr-west-1.myhuaweicloud.com/hwofficial/nginx-ingress:v1.11.5
    imagePullPolicy: IfNotPresent
    lifecycle:
      preStop:
        exec:
          command:
          - /bin/sh
          - -c
          - sleep 10; /wait-shutdown
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      initialDelaySeconds: 100
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: nginx-ingress-controller
    ports:
    - containerPort: 80
      name: http
      protocol: TCP
    - containerPort: 443
      name: https
      protocol: TCP
    - containerPort: 10254
      name: metrics
      protocol: TCP
    - containerPort: 8443
      name: webhook
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        cpu: "4"
        memory: 2000Mi
      requests:
        cpu: "4"
        memory: 2000Mi
    securityContext:
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - ALL
      runAsUser: 101
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/localtime
      name: localtime
      readOnly: true
    - mountPath: /usr/local/certificates/
      name: webhook-cert
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6rpgv
      readOnly: true
  dnsConfig:
    nameservers:
    - 169.254.20.10
    - 10.247.3.10
    options:
    - name: single-request-reopen
      value: ""
    - name: timeout
      value: "2"
    - name: ndots
      value: "5"
    searches:
    - demo-app.svc.cluster.local
    - svc.cluster.local
    - cluster.local
  dnsPolicy: None
  enableServiceLinks: true
  initContainers:
  - command:
    - sh
    - -c
    - |
      if [ "$POD_IP" != "$HOST_IP" ]; then
        mount -o remount rw /proc/sys
        if [ $? -eq 0 ]; then
          sysctl -w net.core.somaxconn=65535
          sysctl -w net.ipv4.ip_local_port_range="1024 65535"
          sysctl -w net.ipv4.tcp_fin_timeout=15
          sysctl -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=30
        else
          echo "Failed to remount /proc/sys as read-write. Skipping sysctl commands."
        fi
      fi
    env:
    - name: POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: HOST_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.hostIP
    image: swr.tr-west-1.myhuaweicloud.com/hwofficial/nginx-ingress:v1.11.5
    imagePullPolicy: IfNotPresent
    name: setsysctl
    resources: {}
    securityContext:
      capabilities:
        add:
        - SYS_ADMIN
        drop:
        - ALL
      runAsGroup: 0
      runAsUser: 0
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6rpgv
      readOnly: true
  nodeName: 192.168.0.121
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 82
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: cceaddon-nginx-ingress
  serviceAccountName: cceaddon-nginx-ingress
  terminationGracePeriodSeconds: 300
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 60
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 60
  volumes:
  - hostPath:
      path: /etc/localtime
      type: File
    name: localtime
  - name: webhook-cert
    secret:
      defaultMode: 416
      secretName: cceaddon-nginx-ingress-admission
  - name: kube-api-access-6rpgv
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-08-01T10:38:57Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-08-01T10:38:57Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-08-01T10:39:13Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-08-01T10:39:13Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-08-01T10:38:53Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://fcdcf758c76b80f48a54387bbcab61f8f37bf088097e8116a9f8f954fa84a7a7
    image: swr.tr-west-1.myhuaweicloud.com/hwofficial/nginx-ingress:v1.11.5
    imageID: swr.tr-west-1.myhuaweicloud.com/hwofficial/nginx-ingress@sha256:5fdc326392a59c179ff6025475aea2cb1b49b943163659bd0560d2e1bb099792
    lastState: {}
    name: nginx-ingress-controller
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-08-01T10:38:57Z"
    volumeMounts:
    - mountPath: /etc/localtime
      name: localtime
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /usr/local/certificates/
      name: webhook-cert
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6rpgv
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 192.168.0.121
  hostIPs:
  - ip: 192.168.0.121
  initContainerStatuses:
  - containerID: containerd://93d56ecb3f5255f3bece99f500df2704d8cd6ea5f9a468aa6216f83d4addebc4
    image: swr.tr-west-1.myhuaweicloud.com/hwofficial/nginx-ingress:v1.11.5
    imageID: swr.tr-west-1.myhuaweicloud.com/hwofficial/nginx-ingress@sha256:5fdc326392a59c179ff6025475aea2cb1b49b943163659bd0560d2e1bb099792
    lastState: {}
    name: setsysctl
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: containerd://93d56ecb3f5255f3bece99f500df2704d8cd6ea5f9a468aa6216f83d4addebc4
        exitCode: 0
        finishedAt: "2025-08-01T10:38:57Z"
        reason: Completed
        startedAt: "2025-08-01T10:38:57Z"
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-6rpgv
      readOnly: true
      recursiveReadOnly: Disabled
  phase: Running
  podIP: 10.0.0.12
  podIPs:
  - ip: 10.0.0.12
  qosClass: Burstable
  startTime: "2025-08-01T10:38:53Z"
