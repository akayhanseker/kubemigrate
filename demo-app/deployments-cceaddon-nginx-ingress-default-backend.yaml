apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    meta.helm.sh/release-name: cceaddon-nginx-ingress
    meta.helm.sh/release-namespace: demo-app
  creationTimestamp: "2025-08-01T10:36:36Z"
  generation: 2
  labels:
    app: nginx-ingress
    app.kubernetes.io/managed-by: Helm
    chart: nginx-ingress-3.0.34
    component: default-backend
    heritage: Helm
    release: cceaddon-nginx-ingress
  name: cceaddon-nginx-ingress-default-backend
  namespace: demo-app
  resourceVersion: "28816"
  uid: ad5e5637-0f37-4443-86a1-cd3289662512
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx-ingress
      component: default-backend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx-ingress
        component: default-backend
        release: cceaddon-nginx-ingress
    spec:
      containers:
      - image: swr.tr-west-1.myhuaweicloud.com/hwofficial/defaultbackend:1.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: nginx-ingress-default-backend
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
        securityContext:
          runAsUser: 65534
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: cceaddon-nginx-ingress
      serviceAccountName: cceaddon-nginx-ingress
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 60
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-08-01T10:36:37Z"
    lastUpdateTime: "2025-08-01T10:36:37Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-08-01T10:36:36Z"
    lastUpdateTime: "2025-08-01T10:38:54Z"
    message: ReplicaSet "cceaddon-nginx-ingress-default-backend-b695944b8" has successfully
      progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
